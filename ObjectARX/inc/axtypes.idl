// Next available MSG number is    10 
// MODULE_ID AXTYPES_IDL_
//
//  (C) Copyright 1998-2010 by Autodesk, Inc.  All rights reserved.
//
// Permission to use, copy, modify, and distribute this software in
// object code form for any purpose and without fee is hereby granted, 
// provided that the above copyright notice appears in all copies and 
// that both that copyright notice and the limited warranty and
// restricted rights notice below appear in all supporting 
// documentation.
//
// AUTODESK PROVIDES THIS PROGRAM "AS IS" AND WITH ALL FAULTS. 
// AUTODESK SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTY OF
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR USE.  AUTODESK, INC. 
// DOES NOT WARRANT THAT THE OPERATION OF THE PROGRAM WILL BE
// UNINTERRUPTED OR ERROR FREE.
//
// Use, duplication, or disclosure by the U.S. Government is subject to 
// restrictions set forth in FAR 52.227-19 (Commercial Computer
// Software - Restricted Rights) and DFAR 252.227-7013(c)(1)(ii)
// (Rights in Technical Data and Computer Software), as applicable.
//
//

// axtypes.idl : Type library constants
//

    typedef [helpcontext(IDH_ENUMTYPES), uuid(6D43C23F-DFCB-4644-B1A7-46AB55BF81FB)] [v1_enum] enum AcBoolean
    {
        // Switches
        acFalse = 0,
        acTrue = 1
    } AcBoolean;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(4941FE6C-6D77-4A3B-8BE7-1A084BB9231E)] [v1_enum] enum AcOnOff
    {
        // Switches
        acOff = 0,
        acOn = 1
    } AcOnOff;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(113C0650-CCCA-4BA3-905C-4316C835DC49)] [v1_enum] enum AcEntityName
    {
        // Entities
        ac3dFace = 1,
        ac3dPolyline = 2,
        ac3dSolid = 3,
        acArc = 4,
        acAttribute = 5,
        acAttributeReference = 6,
        acBlockReference = 7,
        acCircle = 8,
        acDimAligned = 9,
        acDimAngular = 10,

        acDimDiametric = 12,
        acDimOrdinate = 13,
        acDimRadial = 14,
        acDimRotated = 15,
        acEllipse = 16,
        acHatch = 17,
        acLeader = 18,
        acLine = 19,

        acMtext = 21,
        acPoint = 22,
        acPolyline = 23,
        acPolylineLight = 24,
        acPolymesh = 25,
        acRaster = 26,
        acRay = 27,
        acRegion = 28,
        acShape = 29,
        acSolid = 30,
        acSpline = 31,
        acText = 32,
        acTolerance = 33,
        acTrace = 34,
        acPViewport = 35,
        acXline = 36,
        acGroup = 37,
        acMInsertBlock = 38,
        acPolyfaceMesh = 39,
        acMLine = 40,
        acDim3PointAngular = 41,
        acExternalReference = 42,
        acTable = 43,
        acDimArcLength = 44,
		acDimRadialLarge = 45,
        acDwfUnderlay = 46,
        acDgnUnderlay = 47,
        acMLeader = 48,
        acSubDMesh = 49,
		acPdfUnderlay = 50,
        acNurbSurface  =51
    } AcEntityName;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(C20BFC7A-4207-4FE4-97AE-DD1B62D8F4A6)] [v1_enum] enum AcActiveSpace
    {
        // Paper/Model space
        acPaperSpace = 0,
        acModelSpace = 1
    } AcActiveSpace;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(B451621F-FA12-4A67-92EF-4D32027C65FC)] [v1_enum] enum AcKeyboardAccelerator
    {
        // Preferences
        acPreferenceClassic = 0,
        acPreferenceCustom = 1
    } AcKeyboardAccelerator;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(2DD948E5-8ECB-4DE6-B307-2BF1BD9E1E0E)] [v1_enum] enum AcPlotOrientation
    {
        // Plot Orientation
        acPlotOrientationPortrait = 0,
        acPlotOrientationLandscape = 1
    } AcPlotOrientation;

    //Note: the entity color property still takes an int to
    //allow color values other than the ones listed here.
    typedef [helpcontext(IDH_ENUMTYPES), uuid(9B6B7518-D1CC-4A1E-B362-E9E23DE4D95E)] [v1_enum] enum AcColor
    {
        // AutoCAD's color palette
        [helpstring(/*AXTYPES_IDL_1*/"Color Byblock.")]
        acByBlock = 0,
        [helpstring(/*AXTYPES_IDL_2*/"Color Red.")]
        acRed = 1,
        [helpstring(/*AXTYPES_IDL_3*/"Color Yellow.")]
        acYellow = 2,
        [helpstring(/*AXTYPES_IDL_4*/"Color Green.")]
        acGreen = 3,
        [helpstring(/*AXTYPES_IDL_5*/"Color Cyan.")]
        acCyan = 4,
        [helpstring(/*AXTYPES_IDL_6*/"Color Blue.")]
        acBlue = 5,
        [helpstring(/*AXTYPES_IDL_7*/"Color Magenta.")]
        acMagenta = 6,
        [helpstring(/*AXTYPES_IDL_8*/"Color White.")]
        acWhite = 7,
        [helpstring(/*AXTYPES_IDL_9*/"Color Bylayer.")]
        acByLayer = 256
    } AcColor;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(625939E4-BF39-4B49-A974-EA57FFFD205C)] [v1_enum] enum AcAttachmentPoint
    {
        // AttachmentPoint[Mtext]
        acAttachmentPointTopLeft = 1,
        acAttachmentPointTopCenter = 2,
        acAttachmentPointTopRight = 3,
        acAttachmentPointMiddleLeft = 4,
        acAttachmentPointMiddleCenter = 5,
        acAttachmentPointMiddleRight = 6,
        acAttachmentPointBottomLeft = 7,
        acAttachmentPointBottomCenter = 8,
        acAttachmentPointBottomRight = 9
    } AcAttachmentPoint;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(1E6689C3-A4C0-4674-B0F6-45E98677BD6F)] [v1_enum] enum AcDrawingDirection
    {
        // Mtext.DrawingDirection
        acLeftToRight = 1,
        acRightToLeft = 2,
        acTopToBottom = 3,
        acBottomToTop = 4,
        acByStyle     = 5
    } AcDrawingDirection;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(D312A5FD-9DE7-4CD9-A57A-D8A3DB2BA197)] [v1_enum] enum AcLeaderType
    {
        // Pathtype [Leader]
        acLineNoArrow = 0,
        acSplineNoArrow = 1,
        acLineWithArrow = 2,
        acSplineWithArrow = 3
    } AcLeaderType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(F218A874-C594-4A17-9825-C0420122A730)] [v1_enum] enum AcAttributeMode
    {
        // Attribute Mode
        acAttributeModeNormal = 0,
        acAttributeModeInvisible = 1,
        acAttributeModeConstant = 2,
        acAttributeModeVerify = 4,
        acAttributeModePreset = 8,
        acAttributeModeLockPosition = 16,
        acAttributeModeMultipleLine = 32
    } AcAttributeMode;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(06DF5AF2-351D-426F-8128-7BB8EE1364FB)] [v1_enum] enum AcHorizontalAlignment
    {
        // Attribute.HorizontalAlignment
        acHorizontalAlignmentLeft = 0,
        acHorizontalAlignmentCenter = 1,
        acHorizontalAlignmentRight = 2,
        acHorizontalAlignmentAligned = 3,
        acHorizontalAlignmentMiddle = 4,
        acHorizontalAlignmentFit = 5
    } AcHorizontalAlignment;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(4121660E-2700-4533-BDEB-666BD74BBBE7)] [v1_enum] enum AcVerticalAlignment
    {
        // Attribute.VerticalAlignment
        acVerticalAlignmentBaseline = 0,
        acVerticalAlignmentBottom = 1,
        acVerticalAlignmentMiddle = 2,
        acVerticalAlignmentTop = 3
    } AcVerticalAlignment;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(691D9D8A-203B-46CF-A8BB-ED9BED4C8F9B)] [v1_enum] enum AcTextGenerationFlag
    {
        // Text Flag Setting
        acTextFlagBackward = 2,
        acTextFlagUpsideDown = 4
    } AcTextGenerationFlag;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(019486A1-2E2E-43E8-9C7B-6604C8CF31EE)] [v1_enum] enum AcSelect
    {
        // SelectionSet Mode
        acSelectionSetWindow = 0,
        acSelectionSetCrossing = 1,
        acSelectionSetFence = 2,
        acSelectionSetPrevious = 3,
        acSelectionSetLast = 4,
        acSelectionSetAll = 5,
        acSelectionSetWindowPolygon = 6,
        acSelectionSetCrossingPolygon = 7
    } AcSelect;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(1BCEDC2A-0EED-41D5-8911-782FBF35A29F)] [v1_enum] enum AcPatternType
    {
        // Hatch
        // PatternType
        acHatchPatternTypeUserDefined = 0,
        acHatchPatternTypePreDefined = 1,
        acHatchPatternTypeCustomDefined = 2
    } AcPatternType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(B6E1FA84-41F9-43DC-BEB3-82813E6FE836)] [v1_enum] enum AcLoopType
    {
        // Hatch Style
        acHatchLoopTypeDefault = 0,
        acHatchLoopTypeExternal = 1,
        acHatchLoopTypePolyline = 2,
        acHatchLoopTypeDerived = 4,
        acHatchLoopTypeTextbox = 8
    } AcLoopType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(9F3994E0-D06F-4AD3-941A-12EFD1E97055)] [v1_enum] enum AcHatchStyle
    {
        acHatchStyleNormal = 0,
        acHatchStyleOuter = 1,
        acHatchStyleIgnore = 2 
    } AcHatchStyle;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(C0200D24-3E9B-47EC-8736-842406A8DA76)] [v1_enum] enum AcPolylineType
    {
        // Polyline type
        acSimplePoly = 0,
        acFitCurvePoly = 1,
        acQuadSplinePoly = 2,
        acCubicSplinePoly = 3
    } AcPolylineType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(762EA8F7-06D5-4774-A059-2C8D0FB597F3)] [v1_enum] enum Ac3DPolylineType
    {
        // 3dPolyline type
        acSimple3DPoly = 0,
        acQuadSpline3DPoly = 1,
        acCubicSpline3DPoly = 2
    } Ac3DPolylineType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(BA4BEA3F-C670-4F2B-B3B9-F769A3F7DC81)] [v1_enum] enum AcViewportSplitType
    {
        // Viewport Split Modes
        acViewport2Horizontal = 0,
        acViewport2Vertical = 1,
        acViewport3Left = 2,
        acViewport3Right = 3,
        acViewport3Horizontal = 4,
        acViewport3Vertical = 5,
        acViewport3Above = 6,
        acViewport3Below = 7,
        acViewport4 = 8
    } AcViewportSplitType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(5D0D6694-2040-47DD-BBAD-0D1341FE385F)] [v1_enum] enum AcRegenType
    {
        // Application regen constants
        acActiveViewport = 0,
        acAllViewports = 1
    } AcRegenType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(122603BF-AFF9-4C8B-84A2-ED14563F4D02)] [v1_enum] enum AcBooleanType
    {
        // Constants for boolean operation
        acUnion = 0,
        acIntersection = 1,
        acSubtraction = 2
    } AcBooleanType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(87BD4272-75C8-49BA-A94B-7527E2A8E7C4)] [v1_enum] enum AcExtendOption
    {
        // Constants for IntersectWith
        acExtendNone = 0,
        acExtendThisEntity = 1,
        acExtendOtherEntity = 2,
        acExtendBoth = 3
    } AcExtendOption;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(E9EEEABB-57A7-4C15-8015-398A01D227C3)] [v1_enum] enum AcAngleUnits
    {
        // Constants for Interactive Functions
        acDegrees = 0,
        acDegreeMinuteSeconds = 1,
        acGrads = 2,
        acRadians = 3
    } AcAngleUnits;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(74F2B0FE-6F41-4286-8679-4AE48F791D31)] [v1_enum] enum AcUnits
    {
        // Units for distof
        acDefaultUnits = -1,
        acScientific = 1,
        acDecimal = 2,
        acEngineering = 3,
        acArchitectural = 4,
        acFractional = 5
    } AcUnits;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(BF0E6106-A59F-42FC-A964-2EE38FBADAF5)] [v1_enum] enum AcCoordinateSystem
    {
        // Constants for coordinate system transformations
        acWorld = 0,
        acUCS = 1,
        acDisplayDCS = 2,
        acPaperSpaceDCS = 3,
        acOCS = 4,
    } AcCoordinateSystem;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(F4639B60-EF4A-496D-9593-81BCC4413995)] [v1_enum] enum AcMeasurementUnits
    {
        // Constants for MeasurementUnits property off of Preference
        acEnglish = 0,
        acMetric = 1,
    } AcMeasurementUnits;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(BB061350-6B1E-4136-B5B4-1ADCBEF8DDF4)] [v1_enum] enum AcXRefDemandLoad
    {
        // Constants for XRefDemandLoad property off of Preference
        acDemandLoadDisabled = 0,
        acDemandLoadEnabled = 1,
        acDemandLoadEnabledWithCopy = 2
    } AcXRefDemandLoad;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(9287C104-7B09-4569-A6A3-A2833411CF07)] [v1_enum] enum AcPreviewMode
    {
        // Constants for Plot preview
        acPartialPreview = 0,
        acFullPreview = 1
    } AcPreviewMode;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(1FE6D0D6-8A20-4891-AF1D-D5CE8ED83267)] [v1_enum] enum AcPolymeshType
    {
        // Polymesh type
        acSimpleMesh = 0,
        acQuadSurfaceMesh = 5,
        acCubicSurfaceMesh = 6,
        acBezierSurfaceMesh = 8
    } AcPolymeshType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(996A232A-E249-4780-A1B0-4626D4AC3C1F)] [v1_enum] enum AcZoomScaleType
    {
        // Zoom
        acZoomScaledAbsolute =  0,
        acZoomScaledRelative =  1,
        acZoomScaledRelativePSpace =  2
    } AcZoomScaleType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(55C49040-0BA2-40B2-B9CE-63445DE81B40)] [v1_enum] enum AcDragDisplayMode
    {
        // DisplayedDragObject
        acDragDoNotDisplay = 0,
        acDragDisplayOnRequest = 1,
        acDragDisplayAutomatically = 2
    } AcDragDisplayMode;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(5364A350-7CDA-4020-BCEA-ED6CAFA66586)] [v1_enum] enum AcARXDemandLoad
    {
        // Proxy detection
        acDemanLoadDisable = 0,
        acDemandLoadOnObjectDetect = 1,
        acDemandLoadCmdInvoke    = 2
    } AcARXDemandLoad;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(51D3D3D9-4281-4D3D-917A-CB0677C0248B)] [v1_enum] enum AcTextFontStyle
    {
        acFontRegular = 0,
        acFontItalic = 1,
        acFontBold = 2,
        acFontBoldItalic = 3
    } AcTextFontStyle;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(05D14A8B-1EA0-4FD2-B05C-C36CBA7CE256)] [v1_enum] enum AcProxyImage
    {
        acProxyNotShow = 0,
        acProxyShow = 1,
        acProxyBoundingBox = 2
    } AcProxyImage;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(9213F26B-83ED-440B-A120-B1B3158CB3AE)] [v1_enum] enum AcKeyboardPriority
    {
        acKeyboardRunningObjSnap = 0,
        acKeyboardEntry = 1,
        acKeyboardEntryExceptScripts = 2
    } AcKeyboardPriority;

    // Constants for Speller Dialect
    // The strings are extentions and do
    // not need translation.  However,
    // the constant names should be translated
    const LPSTR acAmericanEnglish = "enu";
    const LPSTR acAustralianEnglish = "ena";
    const LPSTR acBritishEnglishIse = "ens";
    const LPSTR acBritishEnglishIze = "enz";
    const LPSTR acCatalan = "ca";
    const LPSTR acCzech = "cs";
    const LPSTR acDanish = "da";
    const LPSTR acDutchPrim = "nl";
    const LPSTR acDutchSec = "nls";
    const LPSTR acFinnish = "fi";
    const LPSTR acFrenchUnaccentCap = "fr";
    const LPSTR acFrenchAccentCap = "fra";
    const LPSTR acGermanScharfesS = "de";
    const LPSTR acGermanDoppleS = "ded";
    const LPSTR acItalian = "it";
    const LPSTR acNorwegianBokmal = "no";
    const LPSTR acNorwegianNynorsk = "non";
    const LPSTR acPortugueseIberian = "pt";
    const LPSTR acPortugueseBrazilian = "ptb";
    const LPSTR acRussianInfrequentIo = "ru";
    const LPSTR acRussianFrequentIo = "rui";
    const LPSTR acSpanishUnaccentCap = "es";
    const LPSTR acSpanishAccentCap = "esa";
    const LPSTR acSwedish = "sv";

    typedef [helpcontext(IDH_ENUMTYPES), uuid(D361C8C4-F03A-4100-8F41-0CEBA3B820D8)] [v1_enum] enum AcMenuGroupType
    {
        acBaseMenuGroup = 0,
        acPartialMenuGroup = 1
    } AcMenuGroupType;


    typedef [helpcontext(IDH_ENUMTYPES), uuid(1D513208-4CB8-47A9-8ADC-B3D323D372CB)] [v1_enum] enum AcMenuFileType
    {
        acMenuFileCompiled = 0,
        acMenuFileSource = 1
    } AcMenuFileType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(0E1DF0A0-B2A7-4DCC-8B19-47178BF34C8F)] [v1_enum] enum AcMenuItemType
    {
        acMenuItem = 0,
        acMenuSeparator = 1,
        acMenuSubMenu = 2
    } AcMenuItemType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(6CD38EF7-F703-46D7-A428-74CA81A82EBB)] [v1_enum] enum AcToolbarItemType
    {
        acToolbarButton = 0,
        acToolbarSeparator = 1,
        acToolbarControl = 2,
        acToolbarFlyout = 3
    } AcToolbarItemType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(A8A1B708-D1C0-4075-9727-CF9336CB9971)] [v1_enum] enum AcToolbarDockStatus
    {
        acToolbarDockTop = 0,
        acToolbarDockBottom = 1,
        acToolbarDockLeft = 2,
        acToolbarDockRight = 3,
        acToolbarFloating = 4
    } AcToolbarDockStatus;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(C1DFB2BC-078B-4615-8A18-2D38BA2E8DBF)] [v1_enum] enum AcLineWeight
    { 
        acLnWt000          =   0,
        acLnWt005          =   5,
        acLnWt009          =   9,
        acLnWt013          =  13,
        acLnWt015          =  15,
        acLnWt018          =  18,
        acLnWt020          =  20,
        acLnWt025          =  25,
        acLnWt030          =  30,
        acLnWt035          =  35,
        acLnWt040          =  40,
        acLnWt050          =  50,
        acLnWt053          =  53,
        acLnWt060          =  60,
        acLnWt070          =  70,
        acLnWt080          =  80,
        acLnWt090          =  90,
        acLnWt100          = 100,
        acLnWt106          = 106,
        acLnWt120          = 120,
        acLnWt140          = 140,
        acLnWt158          = 158,
        acLnWt200          = 200,
        acLnWt211          = 211,
        acLnWtByLayer      = -1,
        acLnWtByBlock      = -2,
        acLnWtByLwDefault  = -3
    } AcLineWeight;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(F8B91A70-6279-4597-A338-9CF3C7543FBD)] [v1_enum] enum AcWindowState
    {
        acNorm = 1,
        acMin,
        acMax
    } AcWindowState;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(D95B31AE-0AE0-4D65-AAB8-7CAF248771C1)] [v1_enum] enum AcPlotPaperUnits
    {
        acInches = 0,
        acMillimeters,
        acPixels
    } AcPlotPaperUnits;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(F5F3DE0A-680F-4CAF-9797-ACBE60DB0F31)] [v1_enum] enum AcPlotRotation
    {
        ac0degrees = 0,
        ac90degrees,
        ac180degrees,
        ac270degrees
    } AcPlotRotation;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(67C94F55-B138-488B-A658-1C6FFA02D2CA)] [v1_enum] enum AcPlotType
    {
        acDisplay = 0,
        acExtents,
        acLimits,
        acView,
        acWindow,
        acLayout
    } AcPlotType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(66E39D85-AAF1-4929-8734-91CB35923FEC)] [v1_enum] enum AcPlotScale
    {
        acScaleToFit = 0,              // Scaled to Fit
        ac1_128in_1ft,                 // 1/128"= 1'
        ac1_64in_1ft,                  // 1/64"= 1'
        ac1_32in_1ft,                  // 1/32"= 1'
        ac1_16in_1ft,                  // 1/16"= 1'
        ac3_32in_1ft,                  // 3/32"= 1'
        ac1_8in_1ft,                   // 1/8" = 1'
        ac3_16in_1ft,                  // 3/16"= 1'
        ac1_4in_1ft,                   // 1/4" = 1'
        ac3_8in_1ft,                   // 3/8" = 1'
        ac1_2in_1ft,                   // 1/2" = 1'
        ac3_4in_1ft,                   // 3/4" = 1'
        ac1in_1ft,                     // 1"= 1'
        ac3in_1ft,                     // 3"= 1'
        ac6in_1ft,                     // 6"= 1'
        ac1ft_1ft,                     // 1'= 1'
        ac1_1,                         // 1:1
        ac1_2,                         // 1:2
        ac1_4,                         // 1:4
        ac1_5,                         // 1:5
        ac1_8,                         // 1:8
        ac1_10,                        // 1:10
        ac1_16,                        // 1:16           
        ac1_20,                        // 1:20
        ac1_30,                        // 1:30
        ac1_40,                        // 1:40
        ac1_50,                        // 1:50
        ac1_100,                       // 1:100
        ac2_1,                         // 2:1
        ac4_1,                         // 4:1
        ac8_1,                         // 8:1
        ac10_1,                        // 10:1
        ac100_1,                       // 100:1
    } AcPlotScale;     

    // values messaged for ease of use in separating and combining the
    // vertical and horizontal alignment values
    // look at DXF group code documentation for more information
    typedef [helpcontext(IDH_ENUMTYPES), uuid(82EA4AF2-B0AE-4910-8D71-FA9591F7AEE9)] [v1_enum] enum AcAlignment
    {
        acAlignmentLeft = 0,
        acAlignmentCenter,
        acAlignmentRight,
        acAlignmentAligned,
        acAlignmentMiddle,
        acAlignmentFit,
        acAlignmentTopLeft,
        acAlignmentTopCenter,
        acAlignmentTopRight,
        acAlignmentMiddleLeft,
        acAlignmentMiddleCenter,
        acAlignmentMiddleRight,
        acAlignmentBottomLeft,
        acAlignmentBottomCenter,
        acAlignmentBottomRight
    } AcAlignment;

    // Typdefs for stock property types
    typedef [helpcontext(IDH_ENUMTYPES), uuid(2A7F7797-EEC1-4FBE-B9D1-DE110D6B4042)] [public] AcColor       ACAD_COLOR;
    typedef [helpcontext(IDH_ENUMTYPES), uuid(B19A6974-BC0D-415E-8B90-C213D7076F4D)] [public] BSTR          ACAD_LAYER;
    typedef [helpcontext(IDH_ENUMTYPES), uuid(9F4949B8-FACD-44B0-8CFF-DA6123E322EC)] [public] BSTR          ACAD_LTYPE;
    typedef [helpcontext(IDH_ENUMTYPES), uuid(86FDE406-5825-4654-AA60-A9DAF79C5664)] [public] long          ACAD_NULL;
    typedef [helpcontext(IDH_ENUMTYPES), uuid(A98E2D89-E680-4646-87DE-3FBD4FB322FB)] [public] double        ACAD_DISTANCE;
    typedef [helpcontext(IDH_ENUMTYPES), uuid(029A6E55-007E-4428-8DB8-8F322C8E99D5)] [public] double        ACAD_ANGLE;
    typedef [helpcontext(IDH_ENUMTYPES), uuid(DA004D8F-28AF-4D92-A15C-1DA2B1B6E559)] [public] AcLineWeight  ACAD_LWEIGHT;
    typedef [helpcontext(IDH_ENUMTYPES), uuid(4FA1DBF9-F71D-480A-B7A0-107BB15AC383)] [public] double        ACAD_NOUNITS;
    typedef [helpcontext(IDH_ENUMTYPES), uuid(6CC6ABC2-F3F8-4F12-9ABD-1EFB95A81B91)] [public] VARIANT       ACAD_POINT;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(BC26E038-5060-48BC-A412-379A0FAC3167)] [v1_enum] enum AcLineSpacingStyle
    {
        // Mtext: lineSpacingStyle/setLineSpacingStyle
        acLineSpacingStyleAtLeast = 1,
        acLineSpacingStyleExactly = 2,
    } AcLineSpacingStyle;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(86D62DB7-DD92-4349-9ABA-4CE01CE10196)] [v1_enum] enum AcDimPrecision
    {
        //DIMADEC
        acDimPrecisionZero = 0,
        acDimPrecisionOne,
        acDimPrecisionTwo,
        acDimPrecisionThree,
        acDimPrecisionFour,
        acDimPrecisionFive,
        acDimPrecisionSix,
        acDimPrecisionSeven,
        acDimPrecisionEight
    } AcDimPrecision;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(F8C8F0A0-7EBE-4D74-980A-90F6D7A6A6FD)] [v1_enum] enum AcDimUnits
    {
        //DIMALTU
        acDimScientific = 1,
        acDimDecimal,
        acDimEngineering,
        acDimArchitecturalStacked,
        acDimFractionalStacked,
        acDimArchitectural,
        acDimFractional,
        acDimWindowsDesktop
    } AcDimUnits;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(274499C2-9B74-41FA-8B9F-F6797F5EDD17)] [v1_enum] enum AcDimLUnits
    {
        //DIMLUNIT
        acDimLScientific = 1,
        acDimLDecimal,
        acDimLEngineering,
        acDimLArchitectural,
        acDimLFractional,
        acDimLWindowsDesktop
    } AcDimLUnits;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(54813096-C1A5-4F01-9042-AB65E1C013FB)] [v1_enum] enum AcDimArrowheadType
    {
        //DIMBLK1
        acArrowDefault       = 0,
        acArrowClosedBlank   = 1,
        acArrowClosed        = 2,
        acArrowDot           = 3,
        acArrowArchTick      = 4,
        acArrowOblique       = 5,    
        acArrowOpen          = 6,
        acArrowOrigin        = 7,
        acArrowOrigin2       = 8,
        acArrowOpen90        = 9,    
        acArrowOpen30        = 10,
        acArrowDotSmall      = 11,
        acArrowDotBlank      = 12,
        acArrowSmall         = 13,
        acArrowBoxBlank      = 14,
        acArrowBoxFilled     = 15,
        acArrowDatumBlank    = 16,
        acArrowDatumFilled   = 17,
        acArrowIntegral      = 18,
        acArrowNone          = 19,
        acArrowUserDefined   = 20
    } AcDimArrowheadType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(79400A49-1AFF-4058-BA15-E32A8C3F9433)] [v1_enum] enum AcDimCenterType
    {
        //DIMBLK1
        acCenterMark = 0,
        acCenterLine,
        acCenterNone
    } AcDimCenterType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(F88E214F-46B2-46E6-8938-7FD7E6C73F04)] [v1_enum] enum AcDimFit
    {
        //DIMFIT2
        acTextAndArrows = 0,
        acArrowsOnly,
        acTextOnly,
        acBestFit
    } AcDimFit;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(D2DC2B5B-7DF0-413F-A4BD-7D14B97D4A4E)] [v1_enum] enum AcDimFractionType
    {
        //FIMFIT2
        acHorizontal = 0,
        acDiagonal,
        acNotStacked
    } AcDimFractionType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(E0879420-062F-4FE6-88DA-E6D1AF94F01D)] [v1_enum] enum AcDimArcLengthSymbol
    {
        //Arc length symbol position
        acSymInFront = 0,
        acSymAbove,
        acSymNone
    } AcDimArcLengthSymbol;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(C2A37DF0-3224-4D3B-BEA9-122C8EA5DB48)] [v1_enum] enum AcDimHorizontalJustification
    {
        //FIMFIT2
        acHorzCentered = 0,
        acFirstExtensionLine,
        acSecondExtensionLine,
        acOverFirstExtension,
        acOverSecondExtension
    } AcDimHorizontalJustification;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(116378D2-BB8B-4BF1-9E2A-C22319FEC3B2)] [v1_enum] enum AcDimVerticalJustification
    {
        //FIMFIT2
        acVertCentered = 0,
        acAbove,
        acOutside,
        acJIS,
        acUnder
    } AcDimVerticalJustification;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(DD8D7F57-50E0-4933-B17A-B9343329756D)] [v1_enum] enum AcDimTextMovement
    {
        //DIMTMOVE
        acDimLineWithText = 0,
        acMoveTextAddLeader,
        acMoveTextNoLeader
    } AcDimTextMovement;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(02195C5D-E84B-4E4A-B59F-C31DE66CA942)] [v1_enum] enum AcDimToleranceMethod
    {
        //DIMTOL
        acTolNone = 0,
        acTolSymmetrical,
        acTolDeviation,
        acTolLimits,
        acTolBasic
    } AcDimToleranceMethod;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(8962419A-A098-4258-BA0C-73A87235613F)] [v1_enum] enum AcDimToleranceJustify
    {
        //DIMTOLJ
        acTolBottom = 0,
        acTolMiddle,
        acTolTop
    } AcDimToleranceJustify;
    
    typedef [helpcontext(IDH_ENUMTYPES), uuid(53DC160A-44DC-4B0D-B814-A150F9D8B24A)] [v1_enum] enum AcViewportScale
    {
        acVpScaleToFit = 0,              // Scaled to Fit
        acVpCustomScale,                 
        // standard default scales
        acVp1_1,                         // 1:1
        acVp1_2,                         // 1:2
        acVp1_4,                         // 1:4
        acVp1_5,                         // 1:5
        acVp1_8,                         // 1:8
        acVp1_10,                        // 1:10
        acVp1_16,                        // 1:16           
        acVp1_20,                        // 1:20
        acVp1_30,                        // 1:30
        acVp1_40,                        // 1:40
        acVp1_50,                        // 1:50
        acVp1_100,                       // 1:100
        acVp2_1,                         // 2:1
        acVp4_1,                         // 4:1
        acVp8_1,                         // 8:1
        acVp10_1,                        // 10:1
        acVp100_1,                       // 100:1
        acVp1_128in_1ft,                 // 1/128"= 1'
        acVp1_64in_1ft,                  // 1/64"= 1'
        acVp1_32in_1ft,                  // 1/32"= 1'
        acVp1_16in_1ft,                  // 1/16"= 1'
        acVp3_32in_1ft,                  // 3/32"= 1'
        acVp1_8in_1ft,                   // 1/8" = 1'
        acVp3_16in_1ft,                  // 3/16"= 1'
        acVp1_4in_1ft,                   // 1/4" = 1'
        acVp3_8in_1ft,                   // 3/8" = 1'
        acVp1_2in_1ft,                   // 1/2" = 1'
        acVp3_4in_1ft,                   // 3/4" = 1'
        acVp1in_1ft,                     // 1"= 1'
        acVp1and1_2in_1ft,               // 1 1/2"= 1'
        acVp3in_1ft,                     // 3"= 1'
        acVp6in_1ft,                     // 6"= 1'
        acVp1ft_1ft,                     // 1'= 1'
    } AcViewportScale;     

    typedef [helpcontext(IDH_ENUMTYPES), uuid(14F0255C-33A7-487A-8163-4994A6E484E1)] [v1_enum] enum AcISOPenWidth
    {
        acPenWidth013 =  13,
        acPenWidth018 =  18,
        acPenWidth025 =  25,
        acPenWidth035 =  35,
        acPenWidth050 =  50,
        acPenWidth070 =  70,
        acPenWidth100 = 100,
        acPenWidth140 = 140,
        acPenWidth200 = 200,
        acPenWidthUnk =  -1
    } AcISOPenWidth;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(D7827BD2-9CE6-4E6F-A20C-1A0BD11A215E)] [v1_enum] enum AcSaveAsType
    {
        // These must match the corresponding values in AcApDocument::SaveFormat

        acUnknown = -1,
        acR12_dxf = 1,
        acR13_dwg = 4,
        acR13_dxf = 5,
        acR14_dwg = 8,
        acR14_dxf = 9,
        ac2000_dwg = 12,
        ac2000_dxf = 13,
        ac2000_Template = 14,
        ac2004_dwg = 24,
        ac2004_dxf = 25,
        ac2004_Template = 26,
        ac2007_dwg = 36,
        ac2007_dxf = 37,
        ac2007_Template = 38,
        ac2010_dwg = 48,
        ac2010_dxf = 49,
        ac2010_Template = 50,

        acNative = ac2010_dwg,

        // aliases
        acR15_dwg = ac2000_dwg,
        acR15_dxf = ac2000_dxf,
        acR15_Template = ac2000_Template,
        acR18_dwg = ac2004_dwg,
        acR18_dxf = ac2004_dxf,
        acR18_Template = ac2004_Template
    } AcSaveAsType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(D6760237-B6D1-4AC7-9B3D-9977A51296F1)] [v1_enum] enum AcPrinterSpoolAlert
    {
        acPrinterAlwaysAlert = 0,
        acPrinterAlertOnce,
        acPrinterNeverAlertLogOnce,
        acPrinterNeverAlert
    } AcPrinterSpoolAlert;


    typedef [helpcontext(IDH_ENUMTYPES), uuid(431954E3-17AD-45DA-8DC2-252917D6A46F)] [v1_enum] enum AcPlotPolicyForNewDwgs
    {
        acPolicyNewDefault = 0,
        acPolicyNewLegacy
    } AcPlotPolicyForNewDwgs;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(91124033-FFA2-4BD7-9E22-B9E6A51D5C86)] [v1_enum] enum AcPlotPolicyForLegacyDwgs
    {
        acPolicyLegacyDefault = 0,
        acPolicyLegacyQuery,
        acPolicyLegacyLegacy
    } AcPlotPolicyForLegacyDwgs;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(58F84863-E943-4234-82CD-EA981D2CC54D)] [v1_enum] enum AcOleQuality
    {
        acOQLineArt = 0,
        acOQText,
        acOQGraphics,
        acOQPhoto,
        acOQHighPhoto
    } AcOleQuality;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(3EB7A8AC-DACA-42C6-AD45-6D39E476CC7B)] [v1_enum] enum AcLoadPalette
    {
        acPaletteByDrawing = 0,
        acPaletteBySession
    } AcLoadPalette;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(3CE3D739-D57D-43A7-9755-F36814D0319F)] [v1_enum] enum AcInsertUnits
    {
        acInsertUnitsUnitless = 0,
        acInsertUnitsInches,
        acInsertUnitsFeet,
        acInsertUnitsMiles,
        acInsertUnitsMillimeters,
        acInsertUnitsCentimeters,
        acInsertUnitsMeters,
        acInsertUnitsKilometers,
        acInsertUnitsMicroinches,
        acInsertUnitsMils,
        acInsertUnitsYards,
        acInsertUnitsAngstroms,
        acInsertUnitsNanometers,
        acInsertUnitsMicrons,
        acInsertUnitsDecimeters,
        acInsertUnitsDecameters,
        acInsertUnitsHectometers,
        acInsertUnitsGigameters,
        acInsertUnitsAstronomicalUnits,
        acInsertUnitsLightYears,
        acInsertUnitsParsecs
    } AcInsertUnits;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(33762F25-1931-41F1-B09D-A4EDC30D817C)] [v1_enum] enum AcAlignmentPointAcquisition
    {
        acAlignPntAcquisitionAutomatic = 0,
        acAlignPntAcquisitionShiftToAcquire
    } AcAlignmentPointAcquisition;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(2314CCFC-4F3F-44E4-A101-54DAAD8F8174)] [v1_enum] enum AcInsertUnitsAction
    {
        acInsertUnitsPrompt = 0,
        acInsertUnitsAutoAssign
    } AcInsertUnitsAction;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(610349EC-32AC-43CC-89E8-112D45AFD335)] [v1_enum] enum AcPlotPolicy
    {
        acPolicyNamed = 0,
        acPolicyLegacy
    } AcPlotPolicy;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(AF1A3F39-EB87-4C96-9459-DA03F880C092)] [v1_enum] enum AcDrawingAreaShortCutMenu
    {
        acNoDrawingAreaShortCutMenu = 0,
        acUseDefaultDrawingAreaShortCutMenu
    } AcDrawingAreaShortCutMenu;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(481AF049-A798-4E6B-B899-76DEC686094F)] [v1_enum] enum AcDrawingAreaSCMDefault
    {
        acRepeatLastCommand = 0,
        acSCM
    } AcDrawingAreaSCMDefault;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(AB564AB3-5DEC-4258-8B9D-E20F5485FA6F)] [v1_enum] enum AcDrawingAreaSCMEdit
    {
        acEdRepeatLastCommand = 0,
        acEdSCM
    } AcDrawingAreaSCMEdit;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(BAEE6DCD-6232-45F5-A6F3-A0CDAC3D68C7)] [v1_enum] enum AcDrawingAreaSCMCommand
    {
        acEnter = 0,
        acEnableSCMOptions,
        acEnableSCM
    } AcDrawingAreaSCMCommand;


    typedef [helpcontext(IDH_ENUMTYPES), uuid(415197FE-AC7E-493B-9C7C-9CF3B66E9A04)] [v1_enum] enum AcLayerStateMask
    {
        acLsNone           = 0x0000,
        acLsOn             = 0x0001,
        acLsFrozen         = 0x0002,
        acLsLocked         = 0x0004,
        acLsPlot           = 0x0008,
        acLsNewViewport    = 0x0010,
        acLsColor          = 0x0020,
        acLsLineType       = 0x0040,
        acLsLineWeight     = 0x0080,
        acLsPlotStyle      = 0x0100,
        acLsAll            = 0xFFFF
    } AcLayerStateMask;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(CC21B083-40DA-4B5B-9A1E-9F72A6FE68A9)] [v1_enum] enum AcShadePlot
    {
        acShadePlotAsDisplayed = 0,
        acShadePlotWireframe,
        acShadePlotHidden,
        acShadePlotRendered
    } AcShadePlot;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(710C0FFA-29D7-4794-9162-30E6B38BCD65)] [v1_enum] enum AcHatchObjectType
    {
        acHatchObject = 0,
        acGradientObject = 1
    } AcHatchObjectType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(F27F9A40-9A83-4CDE-A72D-B83AEE2CB929)] [v1_enum] enum AcGradientPatternType
    {
        acPreDefinedGradient  = 0,
        acUserDefinedGradient = 1
    } AcGradientPatternType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(1E841973-7BB8-467C-A7D4-09B2EDFA8D6A)] [v1_enum] enum AcTableDirection
    {
        acTableTopToBottom  = 0,
        acTableBottomToTop = 1
    } AcTableDirection;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(F50A42F0-AE20-4802-86EF-97328772DEF0)] [v1_enum] enum AcCellAlignment
    {
        acTopLeft        = 1,
        acTopCenter      = 2,
        acTopRight       = 3,
        acMiddleLeft     = 4,
        acMiddleCenter   = 5,
        acMiddleRight    = 6,
        acBottomLeft     = 7,
        acBottomCenter   = 8,
        acBottomRight    = 9
    } AcCellAlignment;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(8E2410B4-33F8-4F80-9CF0-542434B7AC62)] [v1_enum] enum AcRowType
    {
        acUnknownRow     = 0,
        acDataRow        = 1,
        acTitleRow       = 2,
        acHeaderRow      = 4
    } AcRowType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(53ED042F-3695-4BB9-B4C7-79ECB2FF0EDF)] [v1_enum] enum AcValueDataType
    {
        // These values should match the values of enum 
        // AcValue::DataType in AcValue.h
        acUnknownDataType   = 0,
        acLong              = (0x1 << 0),
        acDouble            = (0x1 << 1),
        acString            = (0x1 << 2),
        acDate              = (0x1 << 3),
        acPoint2d           = (0x1 << 4),
        acPoint3d           = (0x1 << 5),
        acObjectId          = (0x1 << 6),
        acBuffer            = (0x1 << 7),
        acResbuf            = (0x1 << 8),
        acGeneral           = (0x1 << 9),

    } AcValueDataType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(A2D98D13-2847-4E3A-94AF-E78CFEA545C2)] [v1_enum] enum AcValueUnitType
    {
        // These values should match the values of enum 
        // AcValue::UnitType in AcValue.h
        acUnitless      = 0,
        acUnitDistance  = (0x1 << 0),
        acUnitAngle     = (0x1 << 1),
        acUnitArea      = (0x1 << 2),
        acUnitVolume    = (0x1 << 3),

    } AcValueUnitType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(CD794AB1-19AF-499F-89CC-2E6EE23E2414)] [v1_enum] enum AcParseOption
    {
        // These values should match the values of enum 
        // AcValue::ParseOption in AcValue.h
        acParseOptionNone       = 0,
        acSetDefaultFormat      = (0x1 << 0),
        acPreserveMtextFormat   = (0x1 << 1),

    } AcParseOption;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(9E9CB15C-F028-4516-8A5E-487E95E1AEFF)] [v1_enum] enum AcFormatOption
    {
        // These values should match the values of enum 
        // AcValue::FormatOption in AcValue.h
        kFormatOptionNone       = 0,
        acForEditing            = (0x1 << 0),
        acForExpression         = (0x1 << 1),
        acUseMaximumPrecision   = (0x1 << 2),
        acIgnoreMtextFormat     = (0x1 << 3),

    } AcFormatOption;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(1EEEC7AC-996D-4A34-B81C-FEF5314BBBC7)] [v1_enum] enum AcGridLineType
    {
        acInvalidGridLine = 0,
        acHorzTop        = 1,
        acHorzInside     = 2,
        acHorzBottom     = 4,
        acVertLeft       = 8,
        acVertInside     = 0x10,
        acVertRight      = 0x20 

    } AcGridLineType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(AE22B652-3177-4CC6-B5C7-3B3BB192AFA0)] [v1_enum] enum AcCellType
    {
        acUnknownCell = 0,
        acTextCell= 1,
        acBlockCell= 2,

    } AcCellType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(3C7CA153-2011-4E26-92C7-D995368AA624)] [v1_enum] enum AcCellEdgeMask
    {
        acTopMask= 1,
        acRightMask= 2,
        acBottomMask= 4,
        acLeftMask= 8,

    } AcCellEdgeMask;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(B623F9D6-30A0-45F5-A64B-1B300C359C6F)] [v1_enum] enum AcRotationAngle
    {
        acDegreesUnknown = -1,
        acDegrees000     = 0,
        acDegrees090     = 1,
        acDegrees180     = 2,
        acDegrees270     = 3,

    } AcRotationAngle;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(EC9A3904-6CD5-4929-9F51-0BF7AF25AC7E)] [v1_enum] enum AcMergeCellStyleOption
    {
        acMergeCellStyleNone                         = 0,    // AcDb::kMergeCellStyleNone;
        acMergeCellStyleCopyDuplicates               = 0x1,  // AcDb::kMergeCellStyleCopyDuplicates
        acMergeCellStyleOverwriteDuplicates          = 0x2,  // AcDb::kMergeCellStyleOverwriteDuplicates
        acMergeCellStyleConvertDuplicatesToOverrides = 0x4,  // AcDb::kMergeCellStyleConvertDuplicatesToOverrides
        acMergeCellStyleIgnoreNewStyles              = 0x8,  // AcDb::kMergeCellStyleIgnoreNewStyles

    } AcMergeCellStyleOption;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(FCA8436E-3B06-4413-BE30-0424DEF578DF)] [v1_enum] enum AcSelectType
    {
        acTableSelectWindow= 1,
        acTableSelectCrossing= 2,

    } AcSelectType;

	typedef [helpcontext(IDH_ENUMTYPES), uuid(9B5B2420-8504-48DF-A38B-528DCB405F64)] [v1_enum] enum AcOleType
    {
		acOTLink = 1,
		acOTEmbedded = 2,
		acOTStatic = 3
	} AcOleType;

	typedef [helpcontext(IDH_ENUMTYPES), uuid(87ABF48C-325F-4030-8C5E-1D12081627FF)] [v1_enum] enum AcOlePlotQuality
    {
        acOPQMonochrome = 0,
        acOPQLowGraphics,
        acOPQHighGraphics
    } AcOlePlotQuality;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(85C730AB-33C1-476E-A07A-5860381CA3D5)] [v1_enum] enum AcTableStyleOverrides
    {
        //table
        acTitleSuppressed             = 1,
        acHeaderSuppressed            = 2,
        acFlowDirection               = 3,         
        acHorzCellMargin              = 4,
        acVertCellMargin              = 5,
        acTitleRowColor               = 6,
        acHeaderRowColor              = 7,
        acDataRowColor                = 8,
        acTitleRowFillNone            = 9,
        acHeaderRowFillNone           = 10,
        acDataRowFillNone             = 11,
        acTitleRowFillColor           = 12,
        acHeaderRowFillColor          = 13,
        acDataRowFillColor            = 14,
        acTitleRowAlignment           = 15,
        acHeaderRowAlignment          = 16,
        acDataRowAlignment            = 17,
        acTitleRowTextStyle           = 18,
        acHeaderRowTextStyle          = 19,
        acDataRowTextStyle            = 20,
        acTitleRowTextHeight          = 21,
        acHeaderRowTextHeight         = 22,
        acDataRowTextHeight           = 23,
        acTitleRowDataType            = 24,
        acHeaderRowDataType           = 25,
        acDataRowDataType             = 26,
        // grid color
        acTitleHorzTopColor           = 40,
        acTitleHorzInsideColor        = 41,
        acTitleHorzBottomColor        = 42,
        acTitleVertLeftColor          = 43,
        acTitleVertInsideColor        = 44,
        acTitleVertRightColor         = 45,
        acHeaderHorzTopColor          = 46,
        acHeaderHorzInsideColor       = 47,
        acHeaderHorzBottomColor       = 48,
        acHeaderVertLeftColor         = 49,
        acHeaderVertInsideColor       = 50,
        acHeaderVertRightColor        = 51,
        acDataHorzTopColor            = 52,
        acDataHorzInsideColor         = 53,
        acDataHorzBottomColor         = 54,
        acDataVertLeftColor           = 55,
        acDataVertInsideColor         = 56,
        acDataVertRightColor          = 57,
        // grid line weight
        acTitleHorzTopLineWeight      = 70,
        acTitleHorzInsideLineWeight   = 71,
        acTitleHorzBottomLineWeight   = 72,
        acTitleVertLeftLineWeight     = 73,
        acTitleVertInsideLineWeight   = 74,
        acTitleVertRightLineWeight    = 75,
        acHeaderHorzTopLineWeight     = 76,
        acHeaderHorzInsideLineWeight  = 77,
        acHeaderHorzBottomLineWeight  = 78,
        acHeaderVertLeftLineWeight    = 79,
        acHeaderVertInsideLineWeight  = 80,
        acHeaderVertRightLineWeight   = 81,
        acDataHorzTopLineWeight       = 82,
        acDataHorzInsideLineWeight    = 83,
        acDataHorzBottomLineWeight    = 84,
        acDataVertLeftLineWeight      = 85,
        acDataVertInsideLineWeight    = 86,
        acDataVertRightLineWeight     = 87,
        // grid visibility
        acTitleHorzTopVisibility      = 100,
        acTitleHorzInsideVisibility   = 101,
        acTitleHorzBottomVisibility   = 102,
        acTitleVertLeftVisibility     = 103,
        acTitleVertInsideVisibility   = 104,
        acTitleVertRightVisibility    = 105,
        acHeaderHorzTopVisibility     = 106,
        acHeaderHorzInsideVisibility  = 107,
        acHeaderHorzBottomVisibility  = 108,
        acHeaderVertLeftVisibility    = 109,
        acHeaderVertInsideVisibility  = 110,
        acHeaderVertRightVisibility   = 111,
        acDataHorzTopVisibility       = 112,
        acDataHorzInsideVisibility    = 113,
        acDataHorzBottomVisibility    = 114,
        acDataVertLeftVisibility      = 115,
        acDataVertInsideVisibility    = 116,
        acDataVertRightVisibility     = 117,
        //cell 
        acCellAlign                   = 130,
        acCellBackgroundFillNone      = 131,
        acCellBackgroundColor         = 132,
        acCellContentColor            = 133,
        acCellTextStyle               = 134,
        acCellTextHeight              = 135,
        acCellTopGridColor            = 136,
        acCellRightGridColor          = 137,
        acCellBottomGridColor         = 138,
        acCellLeftGridColor           = 139,
        acCellTopGridLineWeight       = 140,
        acCellRightGridLineWeight     = 141,
        acCellBottomGridLineWeight    = 142,
        acCellLeftGridLineWeight      = 143,
        acCellTopVisibility           = 144,
        acCellRightVisibility         = 145,
        acCellBottomVisibility        = 146,
        acCellLeftVisibility          = 147,
        acCellDataType                = 148,

    } AcTableStyleOverrides;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(76378DA2-C38C-4FF9-A39A-5E0CCEFF513E)] [v1_enum] enum AcMLineJustification
    {
        acTop        = 0,
        acZero       = 1,
        acBottom     = 2
    } AcMLineJustification;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(28C72BFA-4953-4F7A-B2C0-1D25F736D60B)] [v1_enum] enum AcBlockScaling
    {
        acAny       = 0,
        acUniform   = 1
    } AcBlockScaling;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(82B4BF8F-2311-475B-BAB0-324AA0C3DCBB)] [v1_enum] enum AcDynamicBlockReferencePropertyUnitsType
    {
            acNoUnits  = 0,
            acAngular  = 1,
            acDistance = 2,
            acArea     = 3
    } AcDynamicBlockReferencePropertyUnitsType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(DC6A2394-7C61-452B-B566-FE9A9192831A)] [v1_enum] enum AcSectionState
    {
        // AcDbSection::State
        // These values should match the values of enum AcDbSection::State 
        // in DbSection.h
        acSectionStatePlane     = (0x1 << 0),
        acSectionStateBoundary  = (0x1 << 1),
        acSectionStateVolume    = (0x1 << 2),

    } AcSectionState;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(6E873081-FFB0-425A-8419-8F3AA06563E2)] [v1_enum] enum AcSectionSubItem
    {
        // AcDbSection::SubItem
        // These values should match the values of enum AcDbSection::SubItem
        // in DbSection.h
        acSectionSubItemkNone              = 0,
        acSectionSubItemSectionLine        = (0x1 << 0),
        acSectionSubItemSectionLineTop     = (0x1 << 1),
        acSectionSubItemSectionLineBottom  = (0x1 << 2),
        acSectionSubItemBackLine           = (0x1 << 3),
        acSectionSubItemBackLineTop        = (0x1 << 4),
        acSectionSubItemBackLineBottom     = (0x1 << 5),
        acSectionSubItemVerticalLineTop    = (0x1 << 6),
        acSectionSubItemVerticalLineBottom = (0x1 << 7),

    } AcSectionSubItem;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(A6E8F2EA-08C4-45CA-B3C9-23590AB8C1EF)] [v1_enum] enum AcSectionType
    {
        // AcDbSectionSettings::SectionType
        // These values should match the values of enum 
        // AcDbSectionSettings::SectionType in DbSection.h
        acSectionTypeLiveSection   = (0x1 << 0),
        acSectionType2dSection     = (0x1 << 1),
        acSectionType3dSection     = (0x1 << 2),

    } AcSectionType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(B44EB433-F35D-485D-9650-7523FCC4FB59)] [v1_enum] enum AcSectionGeneration
    {
        // AcDbSectionSettings::Generation
        // These values should match the values of enum 
        // AcDbSectionSettings::Generation in DbSection.h
        acSectionGenerationSourceAllObjects          = (0x1 << 0),
        acSectionGenerationSourceSelectedObjects     = (0x1 << 1),
        acSectionGenerationDestinationNewBlock       = (0x1 << 4),
        acSectionGenerationDestinationReplaceBlock   = (0x1 << 5),
        acSectionGenerationDestinationFile           = (0x1 << 6),

    } AcSectionGeneration;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(2F8A875C-7E61-44BF-A4B6-21C4C9E30AF9)] [v1_enum] enum AcHelixConstrainType
    {
        acTurnHeight  = 0,
        acTurns       = 1,
        acHeight      = 2

    } AcHelixConstrainType;

   
    typedef [helpcontext(IDH_ENUMTYPES), uuid(87AA15D9-4116-49D3-8AC6-29DD8DF10F7F)] [v1_enum] enum AcShadowDisplayType
    {
        acCastsAndReceivesShadows = 0,
        acCastsShadows = 1,
        acReceivesShadows = 2,
        acIgnoreShadows = 3
    } AcShadowDisplayType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(66E0C3D8-3A39-435F-BDAD-F10679E0B153)] [v1_enum] enum AcLoftedSurfaceNormalType
    {
        acRuled = 0,
        acSmooth = 1,
        acFirstNormal = 2,
        acLastNormal = 3,
        acEndsNormal = 4,
        acAllNormal = 5,
        acUseDraftAngles = 6
    } AcLoftedSurfaceNormalType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(F07370F9-1841-41CA-902E-9815474CDC60)] [v1_enum] enum AcHelixTwistType
    {
        acCCW = 0,
        acCW = 1
    } AcHelixTwistType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(B511B197-EB60-4351-902E-F4714EB164D9)] [v1_enum] enum AcUnderlayLayerOverrideType
    {
        acNoOverrides = 0,
        acApplied = 1
    } AcUnderlayLayerOverrideType;

    typedef [uuid(860F36AF-744A-465F-B094-87EEA66638FD)] [v1_enum] enum AcTableFlowDirection
    {
        acTableFlowRight     = 0x1, // AcDb::kTableBreakFlowRight
        acTableFlowDownOrUp = 0x2,  // AcDb::kTableBreakFlowDownOrUp
        acTableFlowLeft= 0x4,       // AcDb::kTableBreakFlowLeft
    } AcTableFlowDirection;

    typedef [uuid(D493BA13-ED06-45B2-8D33-B35A95D7E904)] [v1_enum] enum AcCellMargin
    {
        acCellMarginTop     = 0x1,        // AcDb::kCellMarginTop
        acCellMarginLeft    = 0x2,        // AcDb::kCellMarginLeft
        acCellMarginBottom  = 0x4,        // AcDb::kCellMarginBottom
        acCellMarginRight   = 0x8,        // AcDb::kCellMarginRight
        acCellMarginHorzSpacing = 0x10,   // AcDb::kCellMarginHorzSpacing
        acCellMarginVertSpacing = 0x20,   // AcDb::kCellMarginVertSpacing
    } AcCellMargin;

    typedef [uuid(EBB41DE7-8C80-4137-A6CF-78EE328B08BE)] [v1_enum] enum AcCellContentLayout
    {
        acCellContentLayoutFlow              = 0x1, // AcDb::kCellContentLayoutFlow
        acCellContentLayoutStackedHorizontal = 0x2, // AcDb::kCellContentLayoutStackedHorizontal
        acCellContentLayoutStackedVertical   = 0x4, // AcDb::kCellContentLayoutStackedVertical
    } AcCellContentLayout;

    typedef [uuid(9C35547A-DEB2-47AB-AEBD-BA4E0EA025B0)] [v1_enum] enum AcCellProperty
    {
        // these enum values are from AcDb.h
           acInvalidCellProperty     = 0,            // AcDb::CellProperty::kInvalidCellProperty
           acLock                    = (0x1 << 0),   // AcDb::CellProperty::kLock
           acDataType                = (0x1 << 1),   // AcDb::CellProperty::kDataType
           acDataFormat              = (0x1 << 2),   // AcDb::CellProperty::kDataFormat
           acRotation                = (0x1 << 3),   // AcDb::CellProperty::kRotation
           acScale                   = (0x1 << 4),   // AcDb::CellProperty::kScale
           acAlignmentProperty       = (0x1 << 5),   // AcDb::CellProperty::kAlignment
           acContentColor            = (0x1 << 6),   // AcDb::CellProperty::kContentColor
           acBackgroundColor         = (0x1 << 7),   // AcDb::CellProperty::kBackgroundColor
           acTextStyle               = (0x1 << 8),   // AcDb::CellProperty::kTextStyle
           acTextHeight              = (0x1 << 9),   // AcDb::CellProperty::kTextHeight
           acMarginLeft              = (0x1 << 10),  // AcDb::CellProperty::kMarginLeft
           acMarginTop               = (0x1 << 11),  // AcDb::CellProperty::kMarginTop
           acMarginRight             = (0x1 << 12),  // AcDb::CellProperty::kMarginRight
           acMarginBottom            = (0x1 << 13),  // AcDb::CellProperty::kMarginBottom
           acEnableBackgroundColor   = (0x1 << 14),  // AcDb::CellProperty::kEnableBackgroundColor
           acAutoScale               = (0x1 << 15),  // AcDb::CellProperty::kAutoScale
           acMergeAll                = (0x1 << 16),  // AcDb::CellProperty::kMergeAll
           acFlowDirBtoT             = (0x1 << 17),  // AcDb::CellProperty::kFlowDirBToT
           acContentLayout           = (0x1 << 18),  // AcDb::CellProperty::kContentLayout
           acDataTypeAndFormat       = (acDataType | acDataFormat), // AcDb::CellProperty::kDataTypeAndFormat
           acContentProperties       = (acDataType | acDataFormat | acRotation |
                                       acScale | acAlignmentProperty | acContentColor |  
                                       acTextStyle | acTextHeight | acAutoScale),  
                                                    // AcDb::CellProperty::kContentProperties
           acBitProperties           = (acEnableBackgroundColor | acAutoScale | acMergeAll | acFlowDirBtoT),
                                                    // AcDb::CellProperty::kBitProperties
           acAllCellProperties       = (acLock | acDataType | acDataFormat | acRotation |
                                       acScale | acAlignmentProperty | acContentColor | acBackgroundColor | 
                                       acTextStyle | acTextHeight | acMarginLeft | acMarginTop |
                                       acMarginRight | acMarginBottom | acEnableBackgroundColor | 
                                       acAutoScale | acMergeAll | acFlowDirBtoT | acContentLayout),
                                                    // AcDb::CellProperty::AllCellProperties
    } AcCellProperty;

    typedef [uuid(287A1E23-CA94-410E-AA1C-77BE1BA0E6F5)] [v1_enum] enum AcGridLineStyle
    {
        acGridLineStyleSingle = 1,      //AcDb::kGridLineStyleSingle
        acGridLineStyleDouble = 2,      //AcDb::kGridLineStyleDouble
    } AcGridLineStyle;

    typedef [uuid(0C5DA888-F1B7-4EA1-A3BD-4ACA3ECB6672)] [v1_enum] enum AcDataLinkUpdateDirection
    {
        acUpdateDataFromSource   = 0x1,     // AcDb::kUpdateDirSourceToData
        acUpdateSourceFromData   = 0x2,     // AcDb::kUpdateDirDataToSource
    } AcDataLinkUpdateDirection;

    typedef [uuid(C0432A1D-3703-4984-93A9-E7A62E06E423)] [v1_enum] enum AcDataLinkUpdateOption
    {
        acUpdateOptionNone                                  = 0,         // AcDb::kUpdateDirSourceToData
        acUpdateOptionOverwriteContentModifiedAfterUpdate   = 0x20000,   // AcDb::kUpdateOptionOverwriteContentModifiedAfterUpdate
        acUpdateOptionOverwriteFormatModifiedAfterUpdate    = 0x40000,   // AcDb::kUpdateOptionOverwriteFormatModifiedAfterUpdate
        acUpdateOptionUpdateFullSourceRange                 = 0x80000,   // AcDb::kUpdateOptionUpdateFullSourceRange
        acUpdateOptionIncludeXrefs                          = 0x100000,  // AcDb::kUpdateOptionIncludeXrefs
    } AcDataLinkUpdateOption;

    typedef [uuid(8337C06A-D4AC-4C15-8004-8DB99E660AC4)] [v1_enum] enum AcCellContentType
    {
        acCellContentTypeUnknown = 0,            //AcDb::CellContentType::kUnknown
        acCellContentTypeValue   = (0x1 << 0),   //AcDb::CellContentType::kCellContentTypeValue
        acCellContentTypeField   = (0x1 << 1),   //AcDb::CellContentType::kUnknown
        acCellContentTypeBlock   = (0x1 << 2),   //AcDb::CellContentType::kCellContentTypeBlock
    } AcCellContentType;

    typedef [uuid(1055DBFD-7B7D-4985-9A39-240D6081B24A)][v1_enum] enum AcCellState
    {
        acCellStateNone             = 0,            //AcDb::kCellStateNone
        acCellStateContentLocked    = 0x1,          //AcDb::kCellStateContentLocked
        acCellStateContentReadOnly  = 0x2,          //AcDb::kCellStateContentReadOnly
        acCellStateFormatLocked     = 0x4,          //AcDb::kCellStateFormatLocked
        acCellStateFormatReadOnly   = 0x8,          //AcDb::kCellStateFormatReadOnly
        acCellStateLinked           = 0x10,          //AcDb::kCellStateLinked
        acCellStateContentModified  = 0x20,          //AcDb::kCellStateContentModified
        acCellStateFormatModified   = 0x40,          //AcDb::kCellStateFormatModified
    } AcCellState;

    typedef [uuid(87DB9AF5-9A20-46E3-9B91-06B49807E682)][v1_enum] enum AcCellOption
    {
        kCellOptionNone    = 0,//AcDb::kCellOptionNone
        kInheritCellFormat = 0x1,//AcDb::kInheritCellFormat
    } AcCellOption;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(98D831DE-CAAC-4E0E-9667-C54E7263A6A8)] [v1_enum] enum AcTextAttachmentType
    {
        acAttachmentTopOfTop        = 0,
        acAttachmentMiddleOfTop     = 1,
        acAttachmentBottomOfTop     = 2,
        acAttachmentBottomOfTopLine = 3,
        acAttachmentMiddle          = 4,
        acAttachmentMiddleOfBottom  = 5,
        acAttachmentBottomOfBottom  = 6,
        acAttachmentBottomLine      = 7,
        acAttachmentAllLine         = 8
    } AcTextAttachmentType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(89D6D064-FB4D-4030-AF21-A1E65F1ED94D)] [v1_enum] enum AcMLeaderType
    {
        acStraightLeader            = 1,
        acSplineLeader              = 2,
        acInVisibleLeader           = 0
    } AcMLeaderType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(293510DF-0106-4A09-9008-5BE4EDAB42DC)] [v1_enum] enum AcMLeaderContentType
    {
        acNoneContent                = 0,
        acBlockContent               = 1,
        acMTextContent               = 2
    } AcMLeaderContentType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(A6EAB731-8B00-485B-A0AC-B541E5856C96)] [v1_enum] enum AcTextAlignmentType
    {
        acLeftAlignment             = 0,
        acCenterAlignment           = 1,
        acRightAlignment            = 2
    } AcTextAlignmentType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(9A54EB18-4791-4F04-B6C5-82D43A7051CE)] [v1_enum] enum AcTextAngleType
    {
        acInsertAngle               = 0,
        acHorizontalAngle           = 1,
        acAlwaysRightReadingAngle   = 2
    } AcTextAngleType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(72794339-4681-433A-8F4F-03F4E090B91F)] [v1_enum] enum AcBlockConnectionType {
        acConnectExtents            = 0,
        acConnectBase               = 1
    } AcBlockConnectionType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(5EA99C30-91C9-4EC1-815A-BBC08A280A71)] [v1_enum] enum AcPredefBlockType
    {
        acBlockImperial      =  0,
        acBlockSlot          =  1,
        acBlockCircle        =  2,
        acBlockBox           =  3,
        acBlockHexagon       =  4,
        acBlockTriangle      =  5,    
        acBlockUserDefined   =  6
    } AcPredefBlockType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(2D8A9641-3879-48D2-A036-013D30930C80)] [v1_enum] enum AcDrawLeaderOrderType {
        acDrawLeaderHeadFirst            = 0,
        acDrawLeaderTailFirst            = 1
    } AcDrawLeaderOrderType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(E0A10A09-638B-4BDF-B521-24D696061436)] [v1_enum] enum AcDrawMLeaderOrderType {
        acDrawContentFirst            = 0,
        acDrawLeaderFirst            = 1
    } AcDrawMLeaderOrderType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(1DD8A563-2E16-4B81-9905-FE2965EA64BD)] [v1_enum] enum AcSegmentAngleType {
        acDegreesAny            = 0,
        acDegrees15            = 1,
        acDegrees30            = 2,
        acDegrees45            = 3,
        acDegrees60            = 4,
        acDegrees90            = 6,
        acDegreesHorz            = 12
    } AcSegmentAngleType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(57d5c98e-6992-419a-879e-fd4e466206b2)] [v1_enum] enum AcTextAttachmentDirection {
        acAttachmentHorizontal = 0,
        acAttachmentVertical   = 1
    } AcTextAttachmentDirection;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(9a5918ec-e2e3-4223-a55d-12076a0cf3fa)] [v1_enum] enum AcVerticalTextAttachmentType {
        acAttachmentCenter          = 0,
        acAttachmentLinedCenter     = 1
    } AcVerticalTextAttachmentType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(656CEC0C-7E36-46ba-8D5E-F2C048525D62)] [v1_enum] enum AcMeshCreaseType {
        acNoneCrease                = 0,
        acAlwaysCrease              = 1,
        acCreaseByLevel             = 2
    } AcMeshCreaseType;

interface IAcadObject; // NOTE: This forward declaration is needed to prevent an MIDL compiler bug from breaking binary compatibility

    typedef [helpcontext(IDH_ENUMTYPES), uuid(1DC2F309-D63B-4956-933D-D400C642F8B2)] [v1_enum] enum AcWireframeType {
        acIsolines            = 0,
        acIsoparms            = 1
    } AcWireframeType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(EB69EFE0-CA9B-40FC-B28C-260A36FADE61)] [v1_enum] enum AcSplineKnotParameterizationType {
        acChord                    = 0,               //AcGe::kChord
        acSqrtChord                = 1,               //AcGe::kSqrtChord
        acUniformParam             = 2,               //AcGe::kUniform
        acCustomParameterization   = 15               //AcGe::kCustomParameterization
    } AcSplineKnotParameterizationType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(31963B10-A0D6-4AB1-AB2E-651B9B8766D8)] [v1_enum] enum AcSplineFrameType {
        acShow                     = 0,
        acHide                     = 1
    } AcSplineFrameType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(0D840EAD-6242-44E2-BEB6-E3A2E3D30114)] [v1_enum] enum AcSplineMethodType {
        acFit                      = 0,
        acControlVertices          = 1
    } AcSplineMethodType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(118D5E6C-3FF1-4c00-861D-BB75042D9007)] [v1_enum] enum AcPointCloudColorType {
        acByColor       = 0,
        acPreset        = 1
    } AcPointCloudColorType;